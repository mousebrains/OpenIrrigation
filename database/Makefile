#
# Install scripts into appropriate directories for a Raspbian Stretch system
# with a user/group
#

include ../Makefile.params

SQL = db.schema.sql
SQL+= db.funcs.sql
SQL+= db.list.sql
SQL+= db.params.sql
SQL+= db.ET.sql
SQL+= db.soil.sql
SQL+= db.crop.sql
SQL+= .db.site.sql # Site and controller information from config

.PHONY: all install clean freshdb mkRoles dropRoles mkdb dropdb createdb dumpdb mkSite

all: clean freshdb

install:

clean:
	rm -f .drop.role.sql .make.role.sql .make.tables.sql .db.site.sql

freshdb: dropdb dropRoles mkRoles createdb mkdb

mkRoles: .make.role.sql
	@ echo Creating roles
	@ sudo -u postgres psql --quiet --file=$<

dropRoles: .drop.role.sql
	@ echo Dropping roles
	@ sudo -u postgres psql --quiet --file=$<

.drop.role.sql:
	@ echo Creating $@
	@ echo "-- This file automatically generated by $(MAKE)" >$@
	@ echo "SET client_min_messages=WARNING;" >>$@ 
	@ for i in $(ROLES); do echo "DROP ROLE IF EXISTS $$i;" >>$@; done
	@ echo "DROP ROLE IF EXISTS $(PARENTROLE);" >>$@

.make.role.sql:
	@ echo Creating $@
	@ echo "-- This file automatically generated by $(MAKE)" >$@
	@ echo "SET client_min_messages=WARNING;" >>$@ 
	@ echo "CREATE ROLE $(PARENTROLE) NOSUPERUSER CREATEDB NOCREATEROLE NOINHERIT NOLOGIN;" >>$@
	@ for i in $(ROLES); do echo "CREATE ROLE $$i IN ROLE $(PARENTROLE) LOGIN INHERIT;" >>$@; done


mkdb: .make.tables.sql
	@ echo Loading schema into $(DBNAME)
	@ psql --quiet --file=$< $(DBNAME)
	
.make.tables.sql: $(SQL)
	@ echo Creating $@
	@ echo "-- This file automatically generated by $(MAKE)" >$@
	@ echo "SET client_min_messages=WARNING;" >>$@ 
	@ echo "BEGIN;" >> $@
	@ for i in $+; do echo "\\include $$i" >>$@; done
	@ echo "REASSIGN OWNED BY CURRENT_USER TO $(PARENTROLE);" >>$@
	@ echo "END;" >> $@

dropdb:
	@ echo Dropping database $(DBNAME)
	@ sudo -u postgres psql  --quiet \
		--command "SET client_min_messages=WARNING;" \
		--command "DROP DATABASE IF EXISTS $(DBNAME);"

createdb: mkRoles
	@ echo Creating database $(DBNAME)
	@ sudo -u postgres psql --quiet \
		--command "SET client_min_messages=WARNING;" \
		--command "CREATE DATABASE $(DBNAME) OWNER $(PARENTROLE);" \
		--command "COMMENT ON DATABASE $(DBNAME) IS 'Irrigation database';"

dumpdb:
	mkdir -p dump.$(DBNAME)
	pg_dump --format=directory --compress=9 --file=dump.$(DBNAME) --dbname=$(DBNAME)

.db.site.sql: ../Makefile.params
	@ echo Creating $@
	@ echo -- This file automatically generated by $(MAKE) >$@
	@ echo 'INSERT INTO site(name,addr,timezone,latitude,longitude,elevation)' >>$@
	@ echo "  VALUES("  >>$@
	@ echo "         '$(SITE)',"  >>$@
	@ echo "         '$(ADDRESS)',"  >>$@
	@ echo "         '$(TIMEZONE)',"  >>$@
	@ echo "         $(LATITUDE),"  >>$@
	@ echo "         $(LONGITUDE),"  >>$@
	@ echo "         $(ELEVATION)"  >>$@
	@ echo "         )" >>$@
	@ echo ";" >>$@
	@ echo "" >>$@
	@ echo 'INSERT INTO controller(name,latitude,longitude,driver,' >>$@
	@ echo '                       maxStations,maxCurrent,delay,make,model,' >>$@
	@ echo '                       installed,notes,site)' >>$@
	@ echo "  VALUES("  >>$@
	@ echo "         '$(CTLNAME)',"  >>$@
	@ echo "         $(LATITUDE),"  >>$@
	@ echo "         $(LONGITUDE),"  >>$@
	@ echo "         '$(CTLDRIVER)',"  >>$@
	@ echo "         $(CTLMAXSTATIONS),"  >>$@
	@ echo "         $(CTLMAXCURRENT),"  >>$@
	@ echo "         $(CTLDELAY),"  >>$@
	@ echo "         '$(CTLMAKE)',"  >>$@
	@ echo "         '$(CTLMODEL)',"  >>$@
	@ echo "         '$(CTLINSTALLED)',"  >>$@
	@ echo "         '$(CTLNOTES)',"  >>$@
	@ echo "         (SELECT id FROM site WHERE name='$(SITE)')"  >>$@
	@ echo "         )" >>$@
	@ echo ";" >>$@
	@ echo "" >>$@
	@ echo 'INSERT INTO poc(name,targetflow,maxflow,delayon,delayoff,site)' >>$@
	@ echo "  VALUES("  >>$@
	@ echo "         '$(POCNAME)',"  >>$@
	@ echo "         $(POCTARGETFLOW),"  >>$@
	@ echo "         $(POCMAXFLOW),"  >>$@
	@ echo "         $(POCDELAYON),"  >>$@
	@ echo "         $(POCDELAYOFF),"  >>$@
	@ echo "         (SELECT id FROM site WHERE name='$(SITE)')"  >>$@
	@ echo "         )" >>$@
	@ echo ";" >>$@
	@ echo "" >>$@
	@ echo 'INSERT INTO sensor(name,latitude,longitude,passivecurrent,activecurrent,driver,' >>$@
	@ echo '                   addr,wirepath,make,model,installed,notes,' >>$@
	@ echo '                   controller,devtype)' >>$@
	@ echo "  VALUES("  >>$@
	@ echo "         '$(FLOWSENSORNAME)',"  >>$@
	@ echo "         $(LATITUDE),"  >>$@
	@ echo "         $(LONGITUDE),"  >>$@
	@ echo "         $(FLOWSENSORPASSIVE),"  >>$@
	@ echo "         $(FLOWSENSORACTIVE),"  >>$@
	@ echo "         '$(FLOWSENSORDRIVER)',"  >>$@
	@ echo "         $(FLOWSENSORADDR),"  >>$@
	@ echo "         $(FLOWSENSORWIREPATH),"  >>$@
	@ echo "         '$(FLOWSENSORMAKE)',"  >>$@
	@ echo "         '$(FLOWSENSORMODEL)',"  >>$@
	@ echo "         '$(FLOWSENSORINSTALLED)',"  >>$@
	@ echo "         '$(FLOWSENSORNOTES)',"  >>$@
	@ echo "         (SELECT id FROM controller WHERE name='$(CTLNAME)'),"  >>$@
	@ echo "         (SELECT id FROM weblist WHERE grp='sensor' AND key='flow')"  >>$@
	@ echo "         )" >>$@
	@ echo ";" >>$@
	@ echo "" >>$@
	@ echo 'INSERT INTO pocflow(name,make,model,tohertz,k,flowoffset,poc,sensor)' >> $@
	@ echo "  VALUES("  >>$@
	@ echo "         '$(FLOWNAME)',"  >>$@
	@ echo "         '$(FLOWMAKE)',"  >>$@
	@ echo "         '$(FLOWMODEL)',"  >>$@
	@ echo "         $(FLOWTOHERTZ),"  >>$@
	@ echo "         $(FLOWK),"  >>$@
	@ echo "         $(FLOWOFFSET),"  >>$@
	@ echo "         (SELECT id FROM poc WHERE name='$(POCNAME)'),"  >>$@
	@ echo "         (SELECT id FROM sensor WHERE name='$(FLOWSENSORNAME)')"  >>$@
	@ echo "         )" >>$@
	@ echo ";" >>$@
