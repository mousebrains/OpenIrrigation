--
-- Commands to execute
--
-- Nov-2016, Pat Welch, pat@mousebrains.com
--
-- The following three lines are for use in sqlite3 command line interface
--
-- .headers on
-- .echo off
-- .timer off

PRAGMA journal_mode = WALL;
PRAGMA synchronous = FULL;
-- PRAGMA foreign_keys = ON;

-- Command queue
DROP TABLE IF EXISTS commands;
CREATE TABLE commands(id INTEGER PRIMARY KEY AUTOINCREMENT, -- unique record ID
                      timestamp INTEGER, -- when action should occur
                      cmd INTEGER, -- on=0, off=1, T=2
                      valve INTEGER, -- valve number
                      src INTEGER -- command source, manual=0, scheduler=1
                     );

-- Error message results
DROP TABLE IF EXISTS errorLog;
CREATE TABLE errorLog(id INTEGER PRIMARY KEY AUTOINCREMENT, -- unique record ID
                      timestamp INTEGER, -- time code was added
                      val INTEGER -- Error code
                     );
DROP INDEX IF EXISTS errorTS;
CREATE INDEX errorTS on errorLog (timestamp);

-- Version message results
DROP TABLE IF EXISTS versionLog;
CREATE TABLE versionLog(id INTEGER PRIMARY KEY AUTOINCREMENT, -- unique record ID
                        timestamp INTEGER, -- time code was added
                        val TEXT -- Version
                       );
DROP INDEX IF EXISTS versionTS;
CREATE INDEX versionTS on versionLog (timestamp);

-- Current message results
DROP TABLE IF EXISTS currentLog;
CREATE TABLE currentLog(id INTEGER PRIMARY KEY AUTOINCREMENT, -- unique record ID
                        timestamp INTEGER, -- time code was added
                        volts REAL, -- voltage in volts
                        mAmps INTEGER -- current in mAmps
                       );
DROP INDEX IF EXISTS currentTS;
CREATE INDEX currentTS on currentLog (timestamp);

-- Sensor message results
DROP TABLE IF EXISTS sensorLog;
CREATE TABLE sensorLog(id INTEGER PRIMARY KEY AUTOINCREMENT, -- unique record ID
                       timestamp INTEGER, -- time code was added
                       sensor INTEGER, -- sensor number
                       val INTEGER, -- reading, Hertz*10
                       code INTEGER, -- reading code, typically 4
		       flow REAL -- val processed into a physical value
                       );
DROP INDEX IF EXISTS sensorTS;
CREATE INDEX sensorTS on sensorLog (timestamp);

-- Two message results
DROP TABLE IF EXISTS twoLog;
CREATE TABLE twoLog(id INTEGER PRIMARY KEY AUTOINCREMENT, -- unique record ID
                    timestamp INTEGER, -- time code was added
                    sensor INTEGER, -- sensor number
                    val INTEGER -- reading
                   );

-- Pee message results
DROP TABLE IF EXISTS peeLog;
CREATE TABLE peeLog(id INTEGER PRIMARY KEY AUTOINCREMENT, -- unique record ID
                    timestamp INTEGER, -- time code was added
                    sensor INTEGER, -- sensor number
                    val INTEGER -- reading
                   );

-- Tee message results
DROP TABLE IF EXISTS teeLog;
CREATE TABLE teeLog(id INTEGER PRIMARY KEY AUTOINCREMENT, -- unique record ID
                    timestamp INTEGER, -- time code was added
                    valve INTEGER, -- sensor number
                    preCurrent INTEGER, -- pre on current in mAmps
                    peakCurrent INTEGER, -- peak on current in mAmps
                    postCurrent INTEGER -- post on current in mAmps
                   );
DROP INDEX IF EXISTS teeTS;
CREATE INDEX teeTS on teeLog (timestamp,valve);

-- On/Off results
DROP TABLE IF EXISTS onOffLog;
CREATE TABLE onOffLog(
	id INTEGER PRIMARY KEY AUTOINCREMENT, -- unique record ID
	valve INTEGER, -- valve being worked on
	onTimeStamp INTEGER, -- When was this valve turned on
        offTimeStamp INTEGER DEFAULT NULL, -- When was this valve turned off
        preCurrent INTEGER, -- pre-current reported by on command
        peakCurrent INTEGER, -- peak-current reported by on command
        postCurrent INTEGER, -- on-current reported by on command
        onCode INTEGER, -- code returned by on command
        offCode INTEGER DEFAULT NULL -- code returned by off command
       );
DROP INDEX IF EXISTS onOffTS;
CREATE INDEX onOffTS on onOffLog (onTimeStamp,offTimeStamp,valve);

-- .schema
