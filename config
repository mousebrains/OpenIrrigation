#! /usr/bin/env python3
#
# This script builds Makefile.params for the local system
#
import argparse
import sys
import os
import grp
import time

def rewrite(prefixOld,prefixNew,name):
	if prefixOld != prefixNew:
		a = os.path.relpath(name, prefixOld)
		name = os.path.join(prefixNew, a)
	return os.path.normcase(os.path.normpath(os.path.expanduser(name)))
	
mydir = os.path.dirname(sys.argv[0])

user = os.getlogin()
group = grp.getgrgid(os.getgid()).gr_name
prefix = os.path.expanduser('~')
webdir = os.path.join(prefix, "public_html")

installCmd = 'install --compare --group=$(GROUP) --owner=$(USER) --backup -D'

parser = argparse.ArgumentParser()
parser.add_argument('--prefix', help='directory tree prefix', default=prefix)
parser.add_argument('--user', help='user to set ownership to', default=user)
parser.add_argument('--group', help='group name to set ownerhip to', default=group)
parser.add_argument('--logdir', help='Where to store log files', 
			default=os.path.join(prefix, "logs"))
parser.add_argument('--bindir', help='Where to store log files', 
			default=os.path.join(prefix, "bin"))
parser.add_argument('--dbname', help='Name of database in server', default='irrigation')
parser.add_argument('--site', help='Name of site', default='Casa')
parser.add_argument('--controller', help='Name of controller', default='Casa')
parser.add_argument('--webdir', help='Where to store log files', default=webdir)
parser.add_argument('--phpdir', help='Where to store log files', 
			default=os.path.join(webdir, "php"))
parser.add_argument('--cssdir', help='Where to store log files', 
			default=os.path.join(webdir, "css"))
parser.add_argument('--jsdir', help='Where to store log files', 
			default=os.path.join(webdir, "js"))
parser.add_argument('--servicedir', help='Where to store log files', default="/etc/systemd/system")
parser.add_argument('--install', help='How to install',  default=installCmd)
parser.add_argument('--simulate', help='Run as a simulator',  action='store_true')

args = parser.parse_args()

with open(os.path.join(mydir, "Makefile.params"), "w") as f:
  f.write("# This file automatically generated on " + time.asctime() + "\n")
  f.write("# by\n")
  f.write("#  " + " ".join(sys.argv) + "\n\n")
  f.write("USER = " + args.user + "\n")
  f.write("GROUP = " + args.group + "\n")
  f.write("DBNAME = " + args.dbname + "\n")
  f.write("SITENAME = " + args.site + "\n")
  f.write("CONTROLLERNAME = " + args.controller + "\n")
  f.write("USERDIR = " + rewrite(prefix,prefix,args.prefix) + "\n")
  f.write("LOGDIR = " + rewrite(prefix, args.prefix, args.logdir) + "\n")
  f.write("BINDIR = " + rewrite(prefix, args.prefix, args.bindir) + "\n")
  f.write("WEBDIR = " + rewrite(prefix, args.prefix, args.webdir) + "\n")
  f.write("PHPDIR = " + rewrite(prefix, args.prefix, args.phpdir) + "\n")
  f.write("CSSDIR = " + rewrite(prefix, args.prefix, args.cssdir) + "\n")
  f.write("JSDIR = " + rewrite(prefix, args.prefix, args.jsdir) + "\n")
  f.write("SERVICEDIR = " + rewrite(prefix, args.prefix, args.servicedir) + "\n")

  f.write("\n")
  f.write("INSTALL = " + args.install + "\n");

  f.write("\n")
  f.write("SIMULATE =" + (" --simul\n" if args.simulate else "\n"))
